library(writexl)#Excel dosyalarını yazmak için kullanılır.
library(sentimentr)# Duygu analizi yapmak için kullanılır.
library(pastecs)# Temel istatistik analizlerini gerçekleştirmek için kullanılır.
library(ggthemes)#ggplot2 grafikleri için özel temalar oluşturmak için kullanılır.
library(ggpubr)# ggplot2 ile yayın kalitesinde grafikler oluşturmak için kullanılır.
library(formattable)#Tabloları özelleştirmek ve biçimlendirmek için kullanılır.
library(ggstance)#ggplot2 grafiklerini yatay düzlemde oluşturmak için kullanılır.
library(GGally)#ggplot2 grafiklerini daha hızlı oluşturmak için kullanılır.
library(report)# R Markdown belgelerini oluşturmak ve yönetmek için kullanılır.
library(citation)#R paketleri için atıf bilgilerini otomatik olarak oluşturmak ve yönetmek için kullanılır.
library(hwordcloud)# Metin maddeciliği uygulamalarında kullanılan bir kelime bulutu oluşturma paketi.
library(syuzhet)# Metinlerin içerdiği duygusal özellikleri analiz etmek için kullanılır.
barbie_emoji_tablosu <- table(unlist(barbie_emoji))
barbie_emoji_df <- data.frame(emoji = names(barbie_emoji_tablosu),
tekrar_sayisi = as.numeric(barbie_emoji_tablosu)) %>%
arrange(desc(tekrar_sayisi)) %>%
slice_head(n = 30)
# Grafik oluştur
ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi, fill = emoji)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = rep("#FFC0CB", nrow(barbie_emoji_df))) +  # Pembe renk
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Grafik oluştur
ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi, fill = emoji)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = rep("pink", nrow(barbie_emoji_df))) +  # Pembe renk
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
oppenheimer_emoji_tablosu <- table(unlist(oppenheimer_emoji))
oppenheimer_emoji_df <- data.frame(emoji = names(oppenheimer_emoji_tablosu),
tekrar_sayisi = as.numeric(oppenheimer_emoji_tablosu)) %>%
arrange(desc(tekrar_sayisi)) %>%
slice_head(n = 30)
# Grafik oluştur
ggplot(oppenheimer_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi, fill = emoji)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = rep("grey", nrow(oppenheimer_emoji_df))) +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(textdata)#Metin maddeciliği (text mining) uygulamaları için kullanılır.
library(tuber)#YouTube Data API'ye erişim sağlar.
library(httpuv)#Web uygulamaları ve sunucu tarafı programlama için kullanılan bir HTTP ve WebSocket kütüphanesi.
library(httr)#HTTP istekleri göndermek ve almak için kullanılır.
library(tidytext)#Metin maddeciliği ve veri çerçeveleri arasında geçiş yapmak için kullanılır.
library(dplyr)#Veri çerçeveleri üzerinde veri manipülasyonu için kullanılır.
library(ggplot2)#Görselleştirme ve grafik oluşturma için kullanılır.
library(stopwords)#Dil bağımsız bir şekilde sık kullanılan kelimelerin listesini içerir.
library(tm)#Metin maddeciliği için kullanılır.
library(stringr)#Metin dizileri üzerinde işlemler gerçekleştirmek için kullanılır.
library(quanteda)# Metin maddeciliği ve metin analizi uygulamaları için kullanılan bir paket.
library(wordcloud2)# Kelime bulutları oluşturmak için kullanılır.
library(RColorBrewer)# Grafiklerde renk paletleri oluşturmak için kullanılır.
library(htmltools)#HTML belgelerini oluşturmak ve düzenlemek için kullanılır.
library(qdap)#Metin maddeciliği ve analiz için çeşitli araçlar içerir.
library(corpustools)# Metin maddeciliği uygulamaları için kullanılır.
library(slam)#Büyük ve seyrek matrisler üzerinde çalışmak için kullanılır.
library(tokenizers)# Metin maddeciliği uygulamaları için dilimleme görevlerini gerçekleştirir.
library(pander)# R Markdown ve R script dosyalarını zenginleştirmek için kullanılır.
library(DT)#Veri çerçevelerini interaktif olarak göstermek için kullanılır.
library(openxlsx)#Excel dosyalarını okumak ve yazmak için kullanılır.
library(writexl)#Excel dosyalarını yazmak için kullanılır.
library(sentimentr)# Duygu analizi yapmak için kullanılır.
library(pastecs)# Temel istatistik analizlerini gerçekleştirmek için kullanılır.
library(ggthemes)#ggplot2 grafikleri için özel temalar oluşturmak için kullanılır.
library(ggpubr)# ggplot2 ile yayın kalitesinde grafikler oluşturmak için kullanılır.
library(formattable)#Tabloları özelleştirmek ve biçimlendirmek için kullanılır.
library(ggstance)#ggplot2 grafiklerini yatay düzlemde oluşturmak için kullanılır.
library(GGally)#ggplot2 grafiklerini daha hızlı oluşturmak için kullanılır.
library(report)# R Markdown belgelerini oluşturmak ve yönetmek için kullanılır.
library(citation)#R paketleri için atıf bilgilerini otomatik olarak oluşturmak ve yönetmek için kullanılır.
library(hwordcloud)# Metin maddeciliği uygulamalarında kullanılan bir kelime bulutu oluşturma paketi.
library(syuzhet)# Metinlerin içerdiği duygusal özellikleri analiz etmek için kullanılır.
library(tuber)
library(stringi)
library(ggplot2)
library(dplyr)
# Grafik oluştur
barbie_grafik<- ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi, fill = emoji)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = rep("pink", nrow(barbie_emoji_df))) +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
# Grafik oluştur
oppenheimer_grafik <- ggplot(oppenheimer_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi, fill = emoji)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = rep("grey", nrow(oppenheimer_emoji_df))) +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(oppenheimer_grafik)
View(oppenheimer_emoji)
# Grafik oluştur
barbie_grafik<- ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi, fill = emoji)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = rep("pink", nrow(barbie_emoji_df))) +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), family='EmojiOne')
print(barbie_grafik)
# Grafik oluştur
barbie_grafik<- ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi, fill = emoji)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = rep("pink", nrow(barbie_emoji_df))) +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
# Grafik oluştur
barbie_grafik<- ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi,)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = rep("pink", nrow(barbie_emoji_df))) +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
# Grafik oluştur
barbie_grafik<- ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = rep("pink", nrow(barbie_emoji_df))) +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
# Grafik oluştur
barbie_grafik<- ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi, fill='pink')) +
geom_bar(stat = "identity") +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
# Grafik oluştur
barbie_grafik<- ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi, color='pink')) +
geom_bar(stat = "identity") +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
# Grafik oluştur
barbie_grafik<- ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi)) +
geom_col(fill = "pink", color = "black")
geom_bar(stat = "identity") +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Grafik oluştur
barbie_grafik<- ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi)) +
geom_bar(stat = "identity") +
geom_col(fill = "pink", color = "black") +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
# Grafik oluştur
barbie_grafik<- ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi)) +
geom_bar(stat = "identity") +
geom_col(fill = "pink") +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
# Grafik oluştur
oppenheimer_grafik <- ggplot(oppenheimer_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi)) +
geom_bar(stat = "identity") +
geom_col(fill = "grey", color = "black") +
labs(title = "En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(oppenheimer_grafik)
library(textdata)
library(tuber)
library(httpuv)
library(httr)
library(tidytext)
library(ggplot2)
library(tm)
library(stringr)
library(quanteda)
library(syuzhet)
library(tuber)
library(dplyr)
library(stopwords)
library(stringr)
library(wordcloud2)
library(RColorBrewer)
library(htmltools)
library(qdap)
library(corpustools)
library(slam)
library(tokenizers)
library(pander)
library(DT)
library(openxlsx)
library(writexl)
library(sentimentr)
library(pastecs)
library(ggthemes)
library(ggpubr)
library(formattable)
library(ggstance)
library(psych)
library(GGally)
library(webshot)
library(kableExtra)
library(report)
library(citation)
library(lubridate)
library(hwordcloud)
library(tidyverse)
library(ggrepel)
barbie_emoji <- stringi::stri_extract_all_regex(barbie_tum_yorumlar$textOriginal, "\\p{So}")
barbie_emoji <- stringi::stri_extract_all_regex(barbie_tum_yorumlar$textOriginal, "\\p{So}")
oppenheimer_emoji <- stringi::stri_extract_all_regex(oppenheimer_tum_yorumlar$textOriginal, "\\p{So}")
library(emojifont)
ggplot() + geom_emoji("heart",color = 'pink') + theme_void()
View(barbie_emoji)
View(barbie_emoji_df)
ggplot() + geom_emoji("person_facepalming",color = 'pink') + theme_void()
ggplot() + geom_emoji("person_face_palming",color = 'pink') + theme_void()
ggplot() + geom_emoji("woman_face_palming",color = 'pink') + theme_void()
ggplot() + geom_emoji("woman_facepalming",color = 'pink') + theme_void()
ggplot() + geom_emoji("woman_facepalming",color = 'purple') + theme_void()
ggplot() + geom_emoji("heart",color = 'pink') + theme_void()
ggplot() + geom_emoji("nerd_face",color = 'red') + theme_void()
ggplot() + geom_emoji("heart",color = 'pink') + theme_void()
labs(title = "En Çok Tekrar Edilen")
ggplot() + geom_emoji("heart",color = 'pink') + theme_void()
labs(title = "En Çok Tekrar Edilen")
ggplot() + geom_emoji("heart",color = 'pink') + theme_void() +
labs(title = "En Çok Tekrar Edilen")
ggplot() + geom_emoji("woman_facepalming",color = 'purple') + theme_void()+
labs(title='En Az Tekrar Edilen')
View(oppenheimer_emoji_df)
# Tabloyu veri çerçevesine dönüştür
op_emoji_butun<- data.frame(emoji = names(oppenheimer_emoji_tablosu),
tekrar_sayisi = as.numeric(oppenheimer_emoji_tablosu))
View(op_emoji_butun)
View(oppenheimer_emoji_df)
ggplot() + geom_emoji("heart",color = 'red'),emoji("fire") + theme_void() +
ggplot() + geom_emoji("heart",color = 'red') + theme_void() +
labs(title = "Barbie En Çok Tekrar Eden")
# Grafik oluştur
barbie_grafik<- ggplot(barbie_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi)) +
geom_bar(stat = "identity") +
geom_col(fill = "pink") +
labs(title = "Barbie En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
# Grafik oluştur
oppenheimer_grafik <- ggplot(oppenheimer_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi)) +
geom_bar(stat = "identity") +
geom_col(fill = "grey", color = "black") +
labs(title = "Oppenheimer En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(oppenheimer_grafik)
library(emojifont)
barbie_emoji_df$emoji <- factor(barbie_emoji_df$emoji, levels = barbie_emoji_df$emoji[order(barbie_emoji_df$tekrar_sayisi, decreasing = TRUE)])
# Grafik oluşturma
barbie_grafik <- ggplot(barbie_emoji_df, aes(x = emoji, y = tekrar_sayisi, label = emoji)) +
geom_col(fill = "pink") +
geom_text(vjust = -0.5, size = 6, color = "black") + # Sütunların üstünde emoji etiketlerini gösterme
labs(title = "Barbie En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
barbie_emoji_df$emoji <- factor(barbie_emoji_df$emoji, levels = barbie_emoji_df$emoji[order(barbie_emoji_df$tekrar_sayisi, decreasing = TRUE)])
# Grafik oluşturma
barbie_grafik <- ggplot(barbie_emoji_df, aes(x = emoji, y = tekrar_sayisi, label = emoji)) +
geom_col(fill = "pink") +
geom_text(vjust = -0.5, size = 6, color = "black") + # Sütunların üstünde emoji etiketlerini gösterme
labs(title = "Barbie En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
suppressMessages(library(dplyr))
library(stringi)
library(ggplot2)
library(emojifont)
barbie_emoji_df$emoji <- factor(barbie_emoji_df$emoji, levels = barbie_emoji_df$emoji[order(barbie_emoji_df$tekrar_sayisi, decreasing = TRUE)])
# Grafik oluşturma
barbie_grafik <- ggplot(barbie_emoji_df, aes(x = emoji, y = tekrar_sayisi, label = emoji)) +
geom_col(fill = "pink") +
geom_text(vjust = -0.5, size = 6, color = "black") + # Sütunların üstünde emoji etiketlerini gösterme
labs(title = "Barbie En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
# Paketleri aktifleştiriyorum.
library(textdata)#Metin maddeciliği (text mining) uygulamaları için kullanılır.
library(tuber)#YouTube Data API'ye erişim sağlar.
library(httpuv)#Web uygulamaları ve sunucu tarafı programlama için kullanılan bir HTTP ve WebSocket kütüphanesi.
library(httr)#HTTP istekleri göndermek ve almak için kullanılır.
library(tidytext)#Metin maddeciliği ve veri çerçeveleri arasında geçiş yapmak için kullanılır.
library(dplyr)#Veri çerçeveleri üzerinde veri manipülasyonu için kullanılır.
library(ggplot2)#Görselleştirme ve grafik oluşturma için kullanılır.
library(stopwords)#Dil bağımsız bir şekilde sık kullanılan kelimelerin listesini içerir.
library(tm)#Metin maddeciliği için kullanılır.
library(stringr)#Metin dizileri üzerinde işlemler gerçekleştirmek için kullanılır.
library(quanteda)# Metin maddeciliği ve metin analizi uygulamaları için kullanılan bir paket.
library(wordcloud2)# Kelime bulutları oluşturmak için kullanılır.
library(RColorBrewer)# Grafiklerde renk paletleri oluşturmak için kullanılır.
library(htmltools)#HTML belgelerini oluşturmak ve düzenlemek için kullanılır.
library(qdap)#Metin maddeciliği ve analiz için çeşitli araçlar içerir.
library(corpustools)# Metin maddeciliği uygulamaları için kullanılır.
library(slam)#Büyük ve seyrek matrisler üzerinde çalışmak için kullanılır.
library(tokenizers)# Metin maddeciliği uygulamaları için dilimleme görevlerini gerçekleştirir.
library(pander)# R Markdown ve R script dosyalarını zenginleştirmek için kullanılır.
library(DT)#Veri çerçevelerini interaktif olarak göstermek için kullanılır.
library(openxlsx)#Excel dosyalarını okumak ve yazmak için kullanılır.
library(writexl)#Excel dosyalarını yazmak için kullanılır.
library(sentimentr)# Duygu analizi yapmak için kullanılır.
library(pastecs)# Temel istatistik analizlerini gerçekleştirmek için kullanılır.
library(ggthemes)#ggplot2 grafikleri için özel temalar oluşturmak için kullanılır.
library(ggpubr)# ggplot2 ile yayın kalitesinde grafikler oluşturmak için kullanılır.
library(formattable)#Tabloları özelleştirmek ve biçimlendirmek için kullanılır.
library(ggstance)#ggplot2 grafiklerini yatay düzlemde oluşturmak için kullanılır.
library(GGally)#ggplot2 grafiklerini daha hızlı oluşturmak için kullanılır.
library(report)# R Markdown belgelerini oluşturmak ve yönetmek için kullanılır.
library(citation)#R paketleri için atıf bilgilerini otomatik olarak oluşturmak ve yönetmek için kullanılır.
library(hwordcloud)# Metin maddeciliği uygulamalarında kullanılan bir kelime bulutu oluşturma paketi.
library(syuzhet)# Metinlerin içerdiği duygusal özellikleri analiz etmek için kullanılır.
barbie_emoji_df$emoji <- factor(barbie_emoji_df$emoji, levels = barbie_emoji_df$emoji[order(barbie_emoji_df$tekrar_sayisi, decreasing = TRUE)])
# Grafik oluşturma
barbie_grafik <- ggplot(barbie_emoji_df, aes(x = emoji, y = tekrar_sayisi, label = emoji)) +
geom_col(fill = "pink") +
geom_text(vjust = -0.5, size = 6, color = "black") + # Sütunların üstünde emoji etiketlerini gösterme
labs(title = "Barbie En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
cairo_pdf("grafik.pdf")
# Grafik oluşturma
barbie_grafik <- ggplot(barbie_emoji_df, aes(x = emoji, y = tekrar_sayisi, label = emoji)) +
geom_col(fill = "pink") +
geom_text(vjust = -0.5, size = 6, color = "black") + # Sütunların üstünde emoji etiketlerini gösterme
labs(title = "Barbie En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Grafik çıktısını yazdırma
print(barbie_grafik)
cairo_pdf("grafik.pdf")
# Grafik oluşturma
barbie_grafik <- ggplot(barbie_emoji_df, aes(x = emoji, y = tekrar_sayisi, label = emoji)) +
geom_col(fill = "pink") +
geom_text(vjust = -0.5, size = 6, color = "black") + # Sütunların üstünde emoji etiketlerini gösterme
labs(title = "Barbie En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Grafik çıktısını yazdırma
print(barbie_grafik)
dev.off()
barbie_emoji_df$emoji <- factor(barbie_emoji_df$emoji, levels = barbie_emoji_df$emoji[order(barbie_emoji_df$tekrar_sayisi, decreasing = TRUE)])
# Grafik oluşturma
barbie_grafik <- ggplot(barbie_emoji_df, aes(x = emoji, y = tekrar_sayisi, label = emoji)) +
geom_col(fill = "pink") +
geom_text(vjust = -0.5, size = 6, color = "black") + # Sütunların üstünde emoji etiketlerini gösterme
labs(title = "Barbie En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
library(showtext)
barbie_emoji_df$emoji <- factor(barbie_emoji_df$emoji, levels = barbie_emoji_df$emoji[order(barbie_emoji_df$tekrar_sayisi, decreasing = TRUE)])
# Grafik oluşturma
barbie_grafik <- ggplot(barbie_emoji_df, aes(x = emoji, y = tekrar_sayisi, label = emoji)) +
geom_col(fill = "pink") +
geom_text(vjust = -0.5, size = 6, color = "black") + # Sütunların üstünde emoji etiketlerini gösterme
labs(title = "Barbie En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barbie_grafik)
# Grafik oluştur
oppenheimer_grafik <- ggplot(oppenheimer_emoji_df, aes(x = reorder(emoji, tekrar_sayisi), y = tekrar_sayisi)) +
geom_bar(stat = "identity") +
geom_col(fill = "grey", color = "black") +
labs(title = "Oppenheimer En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(oppenheimer_grafik)
htmltools::tags$video(
src = "C:\\Users\\lenovo\\OneDrive\\Masaüstü\\barbie\\Barbie _ Main Trailer.mp4",
type = "video/mp4",
controls = TRUE,
width = "640",
height = "360"
)
library(stringi)
library(dplyr)
library(ggplot2)
library(emojifont)
library(showtext)
library(gridExtra)
library(htmltools)
library(wordcloud2)
barbie_grafik <- ggplot(barbie_emoji_df, aes(x = emoji, y = tekrar_sayisi)) +
geom_col(fill = 'pink') +
geom_text(aes(label = emoji), vjust = -0.1, family="EmojiOne", size = 9,color='purple') +
labs(title = "Barbie En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(legend.position = "none",
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
barbie_grafik
oppenheimer_grafik <- ggplot(oppenheimer_emoji_df, aes(x = emoji, y = tekrar_sayisi)) +
geom_col(fill = 'grey') +
geom_text(aes(label = emoji), vjust = -0.1, family="EmojiOne", size = 9, color='black') +
labs(title = "Oppenheimer En Çok Tekrar Edilen 30 Emoji Dağılımı",
x = "Emoji",
y = "Tekrar Sayısı") +
theme_minimal() +
theme(legend.position = "none",
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
oppenheimer_grafik
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
library(wordcloud2)
library(here)
install.packages("here")
install.packages("rio")
library(wordcloud2)
library(here)
library(rio)
library(webshot)
library(htmlwidgets)
#s1 <- import(here("data", "set1.xlsx"))
s1 <- structure(list(Type = c("provide", "include", "develop", "support",
"create", "suggest"), `Token Frequency` = c(1218, 1095, 1088,
1078, 1005, 988)), row.names = c(NA, 6L), class = "data.frame")
w1 <- wordcloud2(s1, color = "random-light", backgroundColor = "dark")
saveWidget(w1, '1.html', selfcontained = F)
webshot('1.html', '1.png', vwidth=700,vheight=500, delay = 5)
w1 <- wordcloud2(barbie_emoji_df, color = "random-light", backgroundColor = "dark")
saveWidget(w1, '1.html', selfcontained = F)
webshot('1.html', '1.png', vwidth=700,vheight=500, delay = 5)
w1 <- wordcloud2(barbie_emoji_df, color = "random-light", backgroundColor = "dark")
saveWidget(w1, '1.html', selfcontained = F)
webshot('1.html', '1.png', vwidth=700,vheight=500, delay = 5)
w1 <- wordcloud2(barbie_emoji_df, color = "random-light", backgroundColor = "dark")
saveWidget(w1, '1.html', selfcontained = F)
webshot('1.html', '1.png', vwidth=700,vheight=500, delay = 5)
w1
View(w1)
View(w1)
a = wordcloud2::wordcloud2(barbie_emoji_df)
htmlwidgets::saveWidget(widget = a,
file = "a.html",
selfcontained = TRUE)
View(barbie_emoji_df)
b = wordcloud2::wordcloud2(oppenheimer_emoji_df,color = "grey",size=1.5)
htmlwidgets::saveWidget(widget = b,
file = "b.html",
selfcontained = TRUE)
